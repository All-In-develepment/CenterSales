@page "/projectweight/create"
@using Domain
@using ClientBlazor.Services
@inject ProjectWeightServices projectWeightServices
@inject NavigationManager navigationManager
@inject ProjectService projectService

<h3>Cadastrar Peso de Projeto</h3>
<EditForm Model="@projectWeightModel" OnValidSubmit="HandleCreateProjectWeight">
  <DataAnnotationsValidator />
  <ValidationSummary />

  <div class="form-group">
    <label>Projeto</label>
    <InputSelect @bind-Value="projectWeightModel.ProjectId" class="form-control">
      <option value="">Selecione um projeto</option>
      @foreach (var project in projects)
      {
        <option value="@project.ProjectId">@project.ProjectName</option>
      }
    </InputSelect>
  </div>
  <div class="form-group">
    <label>Mês</label>
    <InputDate @bind-Value="projectWeightModel.Month" class="form-control" />
  </div>
  <div class="form-group">
    <label>Peso da conversão</label>
    <InputNumber @bind-Value="projectWeightModel.ConversionWeight" class="form-control" />
  </div>
  <div class="form-group">
    <label>Peso do deposito</label>
    <InputNumber @bind-Value="projectWeightModel.DepositWeight" class="form-control" />
  </div>
  <div class="form-group">
    <label>Peso da venda</label>
    <InputNumber @bind-Value="projectWeightModel.SalesValueWeight" class="form-control" />
  </div>
  <div class="form-group">
    <label>Peso Cadastro</label>
    <InputNumber @bind-Value="projectWeightModel.RegistrationWeight" class="form-control" />
  </div>
  <button type="submit" class="btn btn-primary">Cadastrar</button>
</EditForm>

@code {
  private ProjectWeight projectWeightModel = new ProjectWeight();
  private string successMessage = string.Empty;
  private string errorMessage = string.Empty;
  private List<Project> projects = new List<Project>();

  protected override async Task OnInitializedAsync()
  {
    projects = await projectService.GetActiveProjectsAsync();
  }

  private async Task HandleCreateProjectWeight()
  {
    await projectWeightServices.CreateProjectWeightAsync(projectWeightModel);
    navigationManager.NavigateTo("/projectweight");
  }
}