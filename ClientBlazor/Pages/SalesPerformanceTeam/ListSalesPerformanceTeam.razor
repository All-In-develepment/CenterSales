@page "/salesperformanceteam"
@using Domain
@using ClientBlazor.Services
@using ClientBlazor.Models
@inject SalesPerformanceTeamServices salesPerformanceTeamServices

<h3>Lista de Equipes de Vendas</h3>
<a class="btn btn-primary" href="/salesperformanceteam/create">Cadastrar Equipe de Vendas</a>
@if (salesPerformanceTeams == null)
{
  <p>Carregando...</p>
}
else if (!salesPerformanceTeams.Any())
{
  <p>Nenhuma equipe de vendas cadastrada.</p>
}
else
{
  <table class="table table-striped">
  <thead>
    <tr>
      <th>Vendedor</th>
      <th>Projeto</th>
      <th>Media</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var salesPerformanceTeam in salesPerformanceTeams)
      {
        <tr>
          <td>@salesPerformanceTeam.SptSellerName</td>
          <td>@salesPerformanceTeam.SptProjectName</td>
          <td>@salesPerformanceTeam.SptAvgConvertion</td>
          <td>
            <a href="/salesperformanceteam/edit/@salesPerformanceTeam.SptId" class="btn btn-warning">Editar</a>
          </td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private List<SPTModel> salesPerformanceTeams = new List<SPTModel>();
  
  protected override async Task OnInitializedAsync()
  {
    var domainSalesPerformanceTeams = await salesPerformanceTeamServices.GetSalesTeamPerformanceAsync();
    @* salesPerformanceTeams = domainSalesPerformanceTeams.Select(s => new SalesPerformanceTeam
    {
      SPTId = s.SPTId,
      SPTTotalLeads = s.SPTTotalLeads,
      SPTAVGConvertion = s.SPTAVGConvertion,
      SPTTotalSales = s.SPTTotalSales
    }).ToList(); *@
    salesPerformanceTeams = domainSalesPerformanceTeams;
  }
}
