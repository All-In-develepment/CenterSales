@page "/bookmakers/create"
@using ClientBlazor.Services
@using Domain
@inject BookMakerServices bookMakerServices
@inject NavigationManager navigationManager

<h3>Criar Bookmaker</h3>

<EditForm Model="@bookmakerModel" OnValidSubmit="HandleCreateBookmakerAsync">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>Nome do Bookmaker</label>
		<InputText @bind-Value="bookmakerModel.BookmakerName" class="form-control" />
	</div>
	<button type="submit" class="btn btn-primary">Criar Bookmaker</button>
</EditForm>

@if (!string.IsNullOrEmpty(successMessage))
{
	<div class="alert alert-success">@successMessage</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">@errorMessage</div>
}

@code {
	private Bookmaker bookmakerModel = new Bookmaker();
	private string successMessage = string.Empty;
	private string errorMessage = string.Empty;

	private async Task HandleCreateBookmakerAsync()
	{
		try
		{
			bool isSuccess = await bookMakerServices.CreateBookmakerAsync(bookmakerModel);

			if (isSuccess)
			{
				successMessage = "Bookmaker criado com sucesso!";
				// Redirecionar para outra página se necessário
				navigationManager.NavigateTo("/bookmakers");
			}
			else
			{
				errorMessage = "Falha ao criar o bookmaker. Tente novamente.";
			}
		}
		catch (Exception ex)
		{
			errorMessage = $"Ocorreu um erro: {ex.Message}";
		}
	}
}